{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useEffect/UseEffectConditional.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UseEffectConditional() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n  useEffect(() => {\n    console.log('useEffect triggered');\n    document.title = `You clicked ${count} times`;\n  }, [count]); // pass 'count' as a dependency to run useEffect only on changing 'count' value\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prevCount => prevCount + 1),\n      children: [\"Clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UseEffectConditional, \"cqtssz3os3sczM88AOxnCh9rFX8=\");\n_c = UseEffectConditional;\nvar _c;\n$RefreshReg$(_c, \"UseEffectConditional\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UseEffectConditional","_s","count","setCount","name","setName","console","log","document","title","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prevCount","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useEffect/UseEffectConditional.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport default function UseEffectConditional() {\n    const [count, setCount] = useState(0);\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        console.log('useEffect triggered')\n        document.title = `You clicked ${count} times`\n    }, [count]); // pass 'count' as a dependency to run useEffect only on changing 'count' value\n\n    return (\n        <>\n            <input value={name} onChange={(e) => setName(e.target.value)}/>\n            <button onClick={() => setCount(prevCount => prevCount+1)}>Clicked {count} times</button>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZY,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCC,QAAQ,CAACC,KAAK,GAAI,eAAcP,KAAM,QAAO;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACIL,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAOc,KAAK,EAAEP,IAAK;MAACQ,QAAQ,EAAGC,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/DrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACiB,SAAS,IAAIA,SAAS,GAAC,CAAC,CAAE;MAAAV,QAAA,GAAC,UAAQ,EAACR,KAAK,EAAC,QAAM;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC3F,CAAC;AAEX;AAACjB,EAAA,CAfuBD,oBAAoB;AAAAqB,EAAA,GAApBrB,oBAAoB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}