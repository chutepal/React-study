{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/basics/Looping.js\";\nimport React from \"react\";\nimport \"./Looping.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getImageUrl(imageId, size = \"s\") {\n  return \"https://i.imgur.com/\" + imageId + size + \".jpg\";\n}\nconst persons = [{\n  id: 1,\n  name: \"Maria Skłodowska-Curie\",\n  imageId: \"szV5sdG\",\n  size: 70,\n  profession: \"physicist and chemist\",\n  awards: [\"Nobel Prize in Physics\", \"Nobel Prize in Chemistry\", \"Davy Medal\", \"Matteucci Medal\"],\n  discovery: \"polonium (chemical element)\"\n}, {\n  id: 2,\n  name: \"Katsuko Saruhashi\",\n  imageId: \"YfeOqp2\",\n  size: 70,\n  profession: \"geochemist\",\n  awards: [\"Miyake Prize for geochemistry\", \"Tanaka Prize\"],\n  discovery: \"a method for measuring carbon dioxide in seawater\"\n}];\n// -------------------------------------------------Without using props-------------------------------------------------\n\n// const myList = persons.map((person) => {\n//   return (<section className=\"profile\">\n//     <h2>{person.name}</h2>\n//     <img\n//       className=\"avatar\"\n//       src={getImageUrl(person.imageId)}\n//       alt={person.name}\n//       width={person.size}\n//       height={person.size}\n//     />\n//     <ul>\n//       <li key={`prof-${person.imageId}`}>\n//         <b>Profession: </b>\n//         {person.profession}\n//       </li>\n//       <li key={`award-${person.imageId}`}>\n//         <b>Awards: {person.awards.length} </b>\n//         ({\n//             person.awards.map((item, i) => i !== person.awards.length-1 ? `${item}, ` : item)\n//         })\n//       </li>\n//       <li key={`disc-${person.imageId}`}>\n//         <b>Discovered: </b>\n//         {person.discovery}\n//       </li>\n//     </ul>\n//   </section>);\n// });\n\n// function Looping() {\n//   return (\n//     <div>\n//       <h1>Notable Scientists</h1>\n//       {myList}\n//     </div>\n//   );\n// }\n\n// -----------------------------------------Using props and looping within function---------------------------------------\n\n// function Profile({ persons }) {\n//   return persons.map((person) => {\n//     return (\n//       <section className=\"profile\" id={person.id}>\n//         <h2>{person.name}</h2>\n//         <img\n//           className=\"avatar\"\n//           src={getImageUrl(person.imageId)}\n//           alt={person.name}\n//           width={person.size}\n//           height={person.size}\n//         />\n//         <ul>\n//           <li key={`prof-${person.imageId}`}>\n//             <b>Profession: </b>\n//             {person.profession}\n//           </li>\n//           <li key={`award-${person.imageId}`}>\n//             <b>Awards: {person.awards.length} </b>(\n//             {person.awards.join(',')}\n//             )\n//           </li>\n//           <li key={`disc-${person.imageId}`}>\n//             <b>Discovered: </b>\n//             {person.discovery}\n//           </li>\n//         </ul>\n//       </section>\n//     );\n//   });\n// }\n\n// function Looping() {\n//   return (\n//     <div>\n//       <h1>Notable Scientists</h1>\n//       <Profile persons={persons} />\n//     </div>\n//   );\n// }\n\n// -----------------------------------------Using props and looping within JSX---------------------------------------\n\nfunction Profile({\n  person\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"profile\",\n    id: person.id,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"avatar\",\n      src: getImageUrl(person.imageId),\n      alt: person.name,\n      width: person.size,\n      height: person.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Profession: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), person.profession]\n      }, `prof-${person.imageId}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Awards: \", person.awards.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), \"(\", person.awards.join(','), \")\"]\n      }, `award-${person.imageId}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Discovered: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), person.discovery]\n      }, `disc-${person.imageId}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n_c = Profile;\nfunction Looping() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notable Scientists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), persons.map(person => {\n      return /*#__PURE__*/_jsxDEV(Profile, {\n        person: person\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n}\n_c2 = Looping;\nexport default Looping;\nvar _c, _c2;\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"Looping\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","getImageUrl","imageId","size","persons","id","name","profession","awards","discovery","Profile","person","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","length","join","_c","Looping","map","_c2","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/basics/Looping.js"],"sourcesContent":["import React from \"react\";\nimport \"./Looping.css\";\n\nfunction getImageUrl(imageId, size = \"s\") {\n  return \"https://i.imgur.com/\" + imageId + size + \".jpg\";\n}\n\nconst persons = [\n  {\n    id: 1,\n    name: \"Maria Skłodowska-Curie\",\n    imageId: \"szV5sdG\",\n    size: 70,\n    profession: \"physicist and chemist\",\n    awards: [\n      \"Nobel Prize in Physics\",\n      \"Nobel Prize in Chemistry\",\n      \"Davy Medal\",\n      \"Matteucci Medal\",\n    ],\n    discovery: \"polonium (chemical element)\",\n  },\n  {\n    id: 2,\n    name: \"Katsuko Saruhashi\",\n    imageId: \"YfeOqp2\",\n    size: 70,\n    profession: \"geochemist\",\n    awards: [\"Miyake Prize for geochemistry\", \"Tanaka Prize\"],\n    discovery: \"a method for measuring carbon dioxide in seawater\",\n  },\n];\n// -------------------------------------------------Without using props-------------------------------------------------\n\n// const myList = persons.map((person) => {\n//   return (<section className=\"profile\">\n//     <h2>{person.name}</h2>\n//     <img\n//       className=\"avatar\"\n//       src={getImageUrl(person.imageId)}\n//       alt={person.name}\n//       width={person.size}\n//       height={person.size}\n//     />\n//     <ul>\n//       <li key={`prof-${person.imageId}`}>\n//         <b>Profession: </b>\n//         {person.profession}\n//       </li>\n//       <li key={`award-${person.imageId}`}>\n//         <b>Awards: {person.awards.length} </b>\n//         ({\n//             person.awards.map((item, i) => i !== person.awards.length-1 ? `${item}, ` : item)\n//         })\n//       </li>\n//       <li key={`disc-${person.imageId}`}>\n//         <b>Discovered: </b>\n//         {person.discovery}\n//       </li>\n//     </ul>\n//   </section>);\n// });\n\n// function Looping() {\n//   return (\n//     <div>\n//       <h1>Notable Scientists</h1>\n//       {myList}\n//     </div>\n//   );\n// }\n\n\n// -----------------------------------------Using props and looping within function---------------------------------------\n\n// function Profile({ persons }) {\n//   return persons.map((person) => {\n//     return (\n//       <section className=\"profile\" id={person.id}>\n//         <h2>{person.name}</h2>\n//         <img\n//           className=\"avatar\"\n//           src={getImageUrl(person.imageId)}\n//           alt={person.name}\n//           width={person.size}\n//           height={person.size}\n//         />\n//         <ul>\n//           <li key={`prof-${person.imageId}`}>\n//             <b>Profession: </b>\n//             {person.profession}\n//           </li>\n//           <li key={`award-${person.imageId}`}>\n//             <b>Awards: {person.awards.length} </b>(\n//             {person.awards.join(',')}\n//             )\n//           </li>\n//           <li key={`disc-${person.imageId}`}>\n//             <b>Discovered: </b>\n//             {person.discovery}\n//           </li>\n//         </ul>\n//       </section>\n//     );\n//   });\n// }\n\n// function Looping() {\n//   return (\n//     <div>\n//       <h1>Notable Scientists</h1>\n//       <Profile persons={persons} />\n//     </div>\n//   );\n// }\n\n\n// -----------------------------------------Using props and looping within JSX---------------------------------------\n\nfunction Profile({ person }) {\n      return (\n        <section className=\"profile\" id={person.id}>\n          <h2>{person.name}</h2>\n          <img\n            className=\"avatar\"\n            src={getImageUrl(person.imageId)}\n            alt={person.name}\n            width={person.size}\n            height={person.size}\n          />\n          <ul>\n            <li key={`prof-${person.imageId}`}>\n              <b>Profession: </b>\n              {person.profession}\n            </li>\n            <li key={`award-${person.imageId}`}>\n              <b>Awards: {person.awards.length} </b>(\n              {person.awards.join(',')}\n              )\n            </li>\n            <li key={`disc-${person.imageId}`}>\n              <b>Discovered: </b>\n              {person.discovery}\n            </li>\n          </ul>\n        </section>\n      );\n  }\n  \n  function Looping() {\n    return (\n      <div>\n        <h1>Notable Scientists</h1>\n        {\n            persons.map(person => {\n                return <Profile person={person} />\n            })\n        }\n      </div>\n    );\n  }\n\nexport default Looping;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}