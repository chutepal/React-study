{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useReducer/UseReducerBasic.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\n\n// useReducer is used as an alternative for state management\n\n// It's the initial value of count\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\n// It's the reducer function which accepts current state which is count and an action passed by dispatch method\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'Increment':\n      return state + 1;\n    case 'Decrement':\n      return state - 1;\n    case 'Reset':\n      return initialState;\n    default:\n      return state;\n  }\n};\nfunction UseReducerBasic() {\n  _s();\n  // Here useReducer returns a pair of value which is current state(count) and a dispatch method which capable of taking action as an input to execute reducer method\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count - \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('Increment'),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('Decrement'),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch('Reset'),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UseReducerBasic, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n_c = UseReducerBasic;\nexport default UseReducerBasic;\nvar _c;\n$RefreshReg$(_c, \"UseReducerBasic\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","reducer","state","action","UseReducerBasic","_s","count","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useReducer/UseReducerBasic.js"],"sourcesContent":["import React, { useReducer } from 'react'\n\n// useReducer is used as an alternative for state management\n\n// It's the initial value of count\nconst initialState = 0;\n\n// It's the reducer function which accepts current state which is count and an action passed by dispatch method\nconst reducer = (state, action) => {\n    switch(action) {\n        case 'Increment':\n            return state + 1;\n        case 'Decrement':\n            return state - 1;\n        case 'Reset':\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nfunction UseReducerBasic() {\n\n    // Here useReducer returns a pair of value which is current state(count) and a dispatch method which capable of taking action as an input to execute reducer method\n    const [count, dispatch] = useReducer(reducer, initialState)\n    return (\n        <>\n            <div>Count - {count}</div>\n            <button onClick={() => dispatch('Increment')}>Increment</button>\n            <button onClick={() => dispatch('Decrement')}>Decrement</button>\n            <button onClick={() => dispatch('Reset')}>Reset</button>\n        </>\n    )\n}\n\nexport default UseReducerBasic\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,CAAC;;AAEtB;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAOA,MAAM;IACT,KAAK,WAAW;MACZ,OAAOD,KAAK,GAAG,CAAC;IACpB,KAAK,WAAW;MACZ,OAAOA,KAAK,GAAG,CAAC;IACpB,KAAK,OAAO;MACR,OAAOF,YAAY;IACvB;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,SAASE,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CAACM,OAAO,EAAED,YAAY,CAAC;EAC3D,oBACIH,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,GAAK,UAAQ,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1Bf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC,WAAW,CAAE;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC,WAAW,CAAE;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC,OAAO,CAAE;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1D,CAAC;AAEX;AAACP,EAAA,CAZQD,eAAe;AAAAU,EAAA,GAAfV,eAAe;AAcxB,eAAeA,eAAe;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}