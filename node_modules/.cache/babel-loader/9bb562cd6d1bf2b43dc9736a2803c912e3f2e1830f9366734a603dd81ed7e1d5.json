{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useCallback/UseCallbackBasic.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport Title from './Title';\nimport Count from './Count';\nimport ButtonCounter from './ButtonCounter';\n\n/** useCallback Hook: \n * \n * What?\n * useCallback is a hook that returns memoized version of the callback function that only changes if one of the dependencies is changed\n * \n * Why?\n * It is useful when passing callbacks to optimized child components that rely on reference to euiality to prevent unnecessary renders.\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UseCallbackBasic() {\n  _s();\n  const [age, setAge] = useState(25);\n  const [salary, setSalary] = useState(25000);\n  const incrementAge = useCallback(() => {\n    setAge(age + 1);\n  }, [age]);\n  const incrementSalary = useCallback(() => {\n    setSalary(salary + 5000);\n  }, [salary]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"useCallback Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      texty: \"age\",\n      value: age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonCounter, {\n      handleClick: incrementAge,\n      children: \"Increment Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Count, {\n      texty: \"salary\",\n      value: salary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonCounter, {\n      handleClick: incrementSalary,\n      children: \"Increment Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UseCallbackBasic, \"BgtXS9PK0Yu0SR/BdmsVOpvcbvg=\");\n_c = UseCallbackBasic;\nexport default UseCallbackBasic;\nvar _c;\n$RefreshReg$(_c, \"UseCallbackBasic\");","map":{"version":3,"names":["React","useCallback","useState","Title","Count","ButtonCounter","jsxDEV","_jsxDEV","Fragment","_Fragment","UseCallbackBasic","_s","age","setAge","salary","setSalary","incrementAge","incrementSalary","children","text","fileName","_jsxFileName","lineNumber","columnNumber","texty","value","handleClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useCallback/UseCallbackBasic.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport Title from './Title'\nimport Count from './Count'\nimport ButtonCounter from './ButtonCounter'\n\n/** useCallback Hook: \n * \n * What?\n * useCallback is a hook that returns memoized version of the callback function that only changes if one of the dependencies is changed\n * \n * Why?\n * It is useful when passing callbacks to optimized child components that rely on reference to euiality to prevent unnecessary renders.\n*/\n\nfunction UseCallbackBasic() {\n    const [age, setAge] = useState(25);\n    const [salary, setSalary] = useState(25000);\n\n    const incrementAge = useCallback(() => {\n        setAge(age + 1);\n    }, [age])\n\n    const incrementSalary = useCallback(() => {\n        setSalary(salary + 5000)\n    }, [salary]);\n\n    return (\n        <>\n            <Title text='useCallback Hook' />\n            <Count texty='age' value={age} />\n            <ButtonCounter handleClick={incrementAge}>Increment Age</ButtonCounter>\n            <Count texty='salary' value={salary} />\n            <ButtonCounter handleClick={incrementSalary}>Increment Salary</ButtonCounter>\n        </>\n    )\n}\n\nexport default UseCallbackBasic\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,YAAY,GAAGf,WAAW,CAAC,MAAM;IACnCY,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,MAAMK,eAAe,GAAGhB,WAAW,CAAC,MAAM;IACtCc,SAAS,CAACD,MAAM,GAAG,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACIP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA,CAACJ,KAAK;MAACgB,IAAI,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjChB,OAAA,CAACH,KAAK;MAACoB,KAAK,EAAC,KAAK;MAACC,KAAK,EAAEb;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjChB,OAAA,CAACF,aAAa;MAACqB,WAAW,EAAEV,YAAa;MAAAE,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eACvEhB,OAAA,CAACH,KAAK;MAACoB,KAAK,EAAC,QAAQ;MAACC,KAAK,EAAEX;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvChB,OAAA,CAACF,aAAa;MAACqB,WAAW,EAAET,eAAgB;MAAAC,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAA,eAC/E,CAAC;AAEX;AAACZ,EAAA,CArBQD,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AAuBzB,eAAeA,gBAAgB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}