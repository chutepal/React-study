{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useState/UseStatePrev.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UseStatePreviousVal() {\n  _s();\n  const [count, setCount] = useState(0);\n  function incrementBy(val) {\n    for (let i = 0; i < val; i++) {\n      setCount(prev => prev + 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Using UseState with Previous value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incrementBy(4),\n      children: \"Increment By 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incrementBy(2),\n      children: \"Increment By 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UseStatePreviousVal, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = UseStatePreviousVal;\nvar _c;\n$RefreshReg$(_c, \"UseStatePreviousVal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","UseStatePreviousVal","_s","count","setCount","incrementBy","val","i","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useState/UseStatePrev.js"],"sourcesContent":["import { useState } from \"react\"\n\nexport default function UseStatePreviousVal() {\n    const [count, setCount] = useState(0);\n\n    function incrementBy(val) {\n        for(let i=0; i<val; i++) {\n            setCount(prev => prev+1)\n        }\n    }\n    return (\n        <>\n            <h2>Using UseState with Previous value</h2>\n            <button onClick={() => incrementBy(4)}>Increment By 4</button>\n            <button onClick={() => incrementBy(2)}>Increment By 2</button>\n            <p>Count: {count}</p>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASS,WAAWA,CAACC,GAAG,EAAE;IACtB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACD,GAAG,EAAEC,CAAC,EAAE,EAAE;MACrBH,QAAQ,CAACI,IAAI,IAAIA,IAAI,GAAC,CAAC,CAAC;IAC5B;EACJ;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAC,CAAE;MAAAI,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9Df,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAC,CAAE;MAAAI,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9Df,OAAA;MAAAW,QAAA,GAAG,SAAO,EAACN,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACvB,CAAC;AAEX;AAACX,EAAA,CAhBuBD,mBAAmB;AAAAc,EAAA,GAAnBd,mBAAmB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}