{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useReducer/withUseContext/ParentComponentURH.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport ComponentURHA1 from './ComponentURHA1';\nimport ComponentURHB1 from './ComponentURHB1';\nimport ComponentURHC1 from './ComponentURHC1';\n\n/**\n * This component implements the global state management using useReducer and useState\n * Here global state which is count value is maintained at highest parent level i.e. ParentComponentURH.js\n * \n *                                          ParentComponentURH\n *                                                  |\n *                                                  |\n *          ------------------------------------------------------------------------------------\n *          |                                       |                                           |\n *          |                                       |                                           |\n *    ComponentURHA1                         ComponentURHB1                              ComponentURHC1\n *                                                  |                                           |\n *                                                  |                                           |\n *                                           ComponentURHB2                              ComponentURHC2\n *                                                                                              |\n *                                                                                              |\n *                                                                                       ComponentURHC3\n * \n * Component tree structure is shown as above:\n * To manage count state gloablly for this tree structure, we will create a counter using useReducer hook and pass it down the tree nodes using useContext.\n */\n\n// Initial state for the reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\n\n// Reducer function to manage state changes based on actions\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'Increment':\n      return state + 1;\n    // Increment the state by 1\n    case 'Decrement':\n      return state - 1;\n    // Decrement the state by 1\n    case 'Reset':\n      return initialState;\n    // Reset the state to initial value\n    default:\n      return state;\n    // Return current state if action is not recognized\n  }\n};\n\n// Create a context for sharing state and dispatch function\nexport const CountContext = /*#__PURE__*/React.createContext();\nfunction ParentComponentURH() {\n  _s();\n  // Use useReducer hook to manage state and dispatch actions\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Count at parent level - \", count, /*#__PURE__*/_jsxDEV(CountContext.Provider, {\n      value: {\n        count: count,\n        action: dispatch\n      },\n      children: [/*#__PURE__*/_jsxDEV(ComponentURHA1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ComponentURHB1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ComponentURHC1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ParentComponentURH, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n_c = ParentComponentURH;\nexport default ParentComponentURH;\nvar _c;\n$RefreshReg$(_c, \"ParentComponentURH\");","map":{"version":3,"names":["React","useReducer","ComponentURHA1","ComponentURHB1","ComponentURHC1","jsxDEV","_jsxDEV","initialState","reducer","state","action","CountContext","createContext","ParentComponentURH","_s","count","dispatch","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Project/Git/React-study/src/components/hooks/useReducer/withUseContext/ParentComponentURH.js"],"sourcesContent":["import React, { useReducer } from 'react'\nimport ComponentURHA1 from './ComponentURHA1'\nimport ComponentURHB1 from './ComponentURHB1'\nimport ComponentURHC1 from './ComponentURHC1'\n\n/**\n * This component implements the global state management using useReducer and useState\n * Here global state which is count value is maintained at highest parent level i.e. ParentComponentURH.js\n * \n *                                          ParentComponentURH\n *                                                  |\n *                                                  |\n *          ------------------------------------------------------------------------------------\n *          |                                       |                                           |\n *          |                                       |                                           |\n *    ComponentURHA1                         ComponentURHB1                              ComponentURHC1\n *                                                  |                                           |\n *                                                  |                                           |\n *                                           ComponentURHB2                              ComponentURHC2\n *                                                                                              |\n *                                                                                              |\n *                                                                                       ComponentURHC3\n * \n * Component tree structure is shown as above:\n * To manage count state gloablly for this tree structure, we will create a counter using useReducer hook and pass it down the tree nodes using useContext.\n */\n\n// Initial state for the reducer\nconst initialState = 0;\n\n// Reducer function to manage state changes based on actions\nconst reducer = (state, action) => {\n    switch (action) {\n        case 'Increment':\n            return state + 1; // Increment the state by 1\n        case 'Decrement':\n            return state - 1; // Decrement the state by 1\n        case 'Reset':\n            return initialState; // Reset the state to initial value\n        default:\n            return state; // Return current state if action is not recognized\n    }\n}\n\n// Create a context for sharing state and dispatch function\nexport const CountContext = React.createContext();\n\nfunction ParentComponentURH() {\n    // Use useReducer hook to manage state and dispatch actions\n    const [count, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <div>\n            {/* Display the current count at the parent level */}\n            Count at parent level - {count}\n            \n            {/* Provide the count and dispatch function to the context */}\n            <CountContext.Provider value={{ count: count, action: dispatch }}>\n                {/* Render child components that can consume the context */}\n                <ComponentURHA1 />\n                <ComponentURHB1 />\n                <ComponentURHC1 />\n            </CountContext.Provider>\n        </div>\n    )\n}\n\nexport default ParentComponentURH;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CAAC;;AAEtB;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM;IACV,KAAK,WAAW;MACZ,OAAOD,KAAK,GAAG,CAAC;IAAE;IACtB,KAAK,WAAW;MACZ,OAAOA,KAAK,GAAG,CAAC;IAAE;IACtB,KAAK,OAAO;MACR,OAAOF,YAAY;IAAE;IACzB;MACI,OAAOE,KAAK;IAAE;EACtB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,gBAAGX,KAAK,CAACY,aAAa,CAAC,CAAC;AAEjD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACO,OAAO,EAAED,YAAY,CAAC;EAE3D,oBACID,OAAA;IAAAW,QAAA,GACyD,0BAC7B,EAACF,KAAK,eAG9BT,OAAA,CAACK,YAAY,CAACO,QAAQ;MAACC,KAAK,EAAE;QAAEJ,KAAK,EAAEA,KAAK;QAAEL,MAAM,EAAEM;MAAS,CAAE;MAAAC,QAAA,gBAE7DX,OAAA,CAACJ,cAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBjB,OAAA,CAACH,cAAc;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBjB,OAAA,CAACF,cAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd;AAACT,EAAA,CAlBQD,kBAAkB;AAAAW,EAAA,GAAlBX,kBAAkB;AAoB3B,eAAeA,kBAAkB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}